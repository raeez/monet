Mythology
---------

The river styx is the boundary between heaven and hell. styx is our virtual python environment.
Gaia is the earth goddess. Gaia does nothing useful (yet).
Cerberus is the three headed dog that guards the gates of hades. cerberus implements a gateway to paymentech.

Development environment
----------------

run `sudo ./dev/dev.[ARCH]` from the project's root directory in order to setup your
development environment. The appropriate dev script for your architecture will install
the required software for your development environment, bootstrap a python virtualenv
into 'styx-dev/' andfetch and install any required dependancies into the virtualenv.

once bootstrapped, activate your environment with '. styx-dev/bin/activate' or. Any
calls to python from within the virtual environment will use the virgin python executable
contained within 'styx-dev/'.

root folder 
-----------
cerberus/
	cerberus server - parses, validates and dispatches to lib/ all incoming api requests from the outside world. Exposes the following RESTful resources:
	[GET|POST|PUT|DELETE]		customer
	[GET|POST|PUT|DELETE]		instrument/bank_card
	[GET|POST|PUT|DELETE]		instrument/bank_account
	[GET|POST]					transaction/charge
	[GET|POST]					transaction/refund
	[GET]						key/processor

hermes/
	hermes server - serves an admin interface to access information regarding merchants boarded and transactions processed.

gaia/
	gaia server - monitors core services.

fcgi/
	contains the FastCGI scripts hosting cerberus, gaia and hermes through a flup FastCGI WSGI server.
lib/
	the manhattan library: implements functionality from db access to processor/bank interfaces.

nginx/
	nginx configuration scripts, temporary certs etc.

styx/
styx-dev/
	virtualenv environments for production and development modes, generated by bootstrap and dev.[ARCH] scripts respectively.

upstart/
	upstart scripts for starting, managing and monitoring the fcgi servers.

dev.[ARCH]
	development bootstrap scripts for fetching required resources.

start
stop
restart
list
	whoesale upstart service management wrapper-scripts. called from boostrap and production scripts.

bootstrap
	script: boostraps a minimal production environment given the presence of minimal resources [see fabfile.py:rebase] requires ubuntu 10.10.

production
	script: upgrades a given a running production environment and retarts core services.

setup.py
fabfile.py
	production installation and deployment specifications.

cerberus.py
gaia.py
hermes.py
	development helper scripts for launching services using flask in development mode (as opposed to flup fcgi servers).
